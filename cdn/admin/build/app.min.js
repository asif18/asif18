var app;app=angular.module("admin",["ui.bootstrap","ui.router","angular-growl","ngAnimate","ckeditor"]),angular.element(document.getElementsByTagName("pre")).addClass("prettyprint"),app.config(["$sceDelegateProvider","$stateProvider","$urlRouterProvider","$locationProvider","growlProvider",function($sceDelegateProvider,$stateProvider,$urlRouterProvider,$locationProvider,growlProvider){$sceDelegateProvider.resourceUrlWhitelist(["self"]),$locationProvider.html5Mode(!1),$locationProvider.hashPrefix(""),$urlRouterProvider.otherwise("/login"),$stateProvider.state("app",{"abstract":!0,url:"",views:{app:{templateUrl:APPCONFIG.baseUrl+"cdn/admin/app/views/app-abs.html"}}}).state("login",{"abstract":!0,url:"",views:{login:{templateUrl:APPCONFIG.baseUrl+"cdn/admin/app/views/login-abs.html"}}}).state("login.loginpage",{url:"/login",views:{loginsection:{templateUrl:APPCONFIG.baseUrl+"cdn/admin/app/views/login.html",controller:"LoginController"}},data:{requireLogin:!1,pageTitle:"Login"}}).state("app.dashboard",{url:"/dashboard",views:{main:{templateUrl:APPCONFIG.baseUrl+"cdn/admin/app/views/dashboard.html",controller:"DashboardController"}},data:{requireLogin:!0,pageTitle:"Dashboard"}}).state("app.category",{url:"/category/:categoryId",views:{main:{templateUrl:APPCONFIG.baseUrl+"cdn/admin/app/views/category.html",controller:"CategoryController"}},params:{categoryId:null},data:{requireLogin:!0,pageTitle:"Category"}}).state("app.listCategories",{url:"/category-list",views:{main:{templateUrl:APPCONFIG.baseUrl+"cdn/admin/app/views/category-list.html",controller:"CategoryListController"}},data:{requireLogin:!0,pageTitle:"Category List"}}).state("app.article",{url:"/article/:articleId",views:{main:{templateUrl:APPCONFIG.baseUrl+"cdn/admin/app/views/article.html",controller:"ArticleController"}},params:{articleId:null},data:{requireLogin:!0,pageTitle:"Article"}}).state("app.listArticles",{url:"/article-list",views:{main:{templateUrl:APPCONFIG.baseUrl+"cdn/admin/app/views/article-list.html",controller:"ArticleListController"}},data:{requireLogin:!0,pageTitle:"Article List"}}),growlProvider.onlyUniqueMessages(!0)}]),app.run(["$rootScope","$state","$transitions","$interval","LoginService","growl",function($rootScope,$state,$transitions,$interval,LoginService,growl){$interval(function(){LoginService.sessionCheck().then(function(response){response.data.status===!1?("login.loginpage"!=$rootScope.currentState&&growl.error("Session expired. Redirecting..",{ttl:5e3}),$state.go("login.loginpage")):$rootScope.vm.user=response.data.user})},1e4);var criteria={to:function(state){return null!=state.data}};$transitions.onStart(criteria,function(trans){var state=trans.to();$rootScope.currentState=state.name,state.data.requireLogin===!0&&LoginService.sessionCheck().then(function(response){response.data.status===!1?(growl.error("Session expired. Redirecting..",{ttl:5e3}),$state.go("login.loginpage")):$rootScope.vm.user=response.data.user}),$rootScope.vm.pageTitle=APPCONFIG.appName+" - "+state.data.pageTitle})}]),app.filter("capitalize",function(){return function(input,all){var reg=all?/([^\W_]+[^\s-]*) */g:/([^\W_]+[^\s-]*)/;return input?input.replace(reg,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase()}):""}}),app.directive("preloader",["$animate","$timeout","$q",function($animate,$timeout,$q){function link(scope,el){function startCounter(){var remaining=100-counter;counter+=.015*Math.pow(1-Math.sqrt(remaining),2),scope.loadCounter=parseInt(counter,10),timeout=$timeout(startCounter,20)}function endCounter(){$timeout.cancel(timeout),scope.loadCounter=100,$timeout(function(){$animate.addClass(el,"preloader-hidden"),angular.element("body").css("overflow","")},300)}scope.loadCounter=0;var timeout,counter=0;angular.element("body").css("overflow","hidden"),el.addClass("preloader"),endCounter(),timeout=$timeout(startCounter)}var directive={restrict:"EAC",template:'<div class="preloader-progress"><div class="preloader-progress-bar" ng-style="{width: loadCounter + \'%\'}"></div></div>',link:link};return directive}]),app.directive("sectionloader",["$animate","$timeout","$q",function($animate,$timeout,$q){function link(scope,el){}var directive={restrict:"EAC",scope:{loading:"="},template:'<div class="section-loader" ng-show="loading"><div class="section-loader-animation"></div></div>',link:link};return directive}]),app.directive("routerloader",["$animate",function($animate){function link(scope,el){}var directive={restrict:"EAC",scope:{loading:"="},template:'<div class="router-loader" ng-show="loading"><div class="progress progress-striped active"><div class="progress-bar progress-bar-color" id="bar" role="progressbar" style="width: 1000%;"></div></div>',link:link};return directive}]),app.service("AppService",["$timeout","$rootScope","$http","growl",function($timeout,$rootScope,$http,growl){var AppServiceOp={};return AppServiceOp.isJson=function(response){var contentType=typeof response;return contentType.toLowerCase(),"json"==contentType||"object"==contentType},AppServiceOp.checkNetworkException=function(response){return response&&AppServiceOp.isJson(response.data)?null===response.data.exception||!response.data.exception.status||(AppServiceOp.systemError(response.data.exception.msg),!1):(AppServiceOp.systemError(),!1)},AppServiceOp.systemError=function(msg){msg?growl.error(msg,{ttl:3e3}):growl.error("Something went wrong! Server is not giving expected response. Try again later",{ttl:3e3})},AppServiceOp}]),app.service("LoginService",["$http","AppService",function($http,AppService){var AppServiceOp={};return AppServiceOp.login=function(data){return $http.post(APPCONFIG.WSURLS.login,data).then(function(response){return!!AppService.checkNetworkException(response)&&response.data},function(response){AppService.checkNetworkException(response)})},AppServiceOp.sessionCheck=function(){return $http.get(APPCONFIG.WSURLS.sessionCheck).then(function(response){return!!AppService.checkNetworkException(response)&&response.data},function(response){AppService.checkNetworkException(response)})},AppServiceOp}]),app.service("ArticleService",["$http","AppService",function($http,AppService){var AppServiceOp={};return AppServiceOp.getArticles=function(data){return $http.post(APPCONFIG.WSURLS.getArticles,data).then(function(response){return!!AppService.checkNetworkException(response)&&response.data},function(response){AppService.checkNetworkException(response)})},AppServiceOp.saveArticle=function(data){return $http.post(APPCONFIG.WSURLS.saveArticle,data).then(function(response){return!!AppService.checkNetworkException(response)&&response.data},function(response){AppService.checkNetworkException(response)})},AppServiceOp.getArticleById=function(data){return $http.post(APPCONFIG.WSURLS.getArticleById,data).then(function(response){return!!AppService.checkNetworkException(response)&&response.data},function(response){AppService.checkNetworkException(response)})},AppServiceOp.updateArticleStatus=function(data){return $http.post(APPCONFIG.WSURLS.updateArticleStatus,data).then(function(response){return!!AppService.checkNetworkException(response)&&response.data},function(response){AppService.checkNetworkException(response)})},AppServiceOp}]),app.service("CategoryService",["$http","AppService",function($http,AppService){var AppServiceOp={};return AppServiceOp.getCategory=function(data){return $http.post(APPCONFIG.WSURLS.getCategory,data).then(function(response){return!!AppService.checkNetworkException(response)&&response.data},function(response){AppService.checkNetworkException(response)})},AppServiceOp.saveCategory=function(data){return $http.post(APPCONFIG.WSURLS.saveCategory,data).then(function(response){return!!AppService.checkNetworkException(response)&&response.data},function(response){AppService.checkNetworkException(response)})},AppServiceOp.getCategories=function(){return $http.get(APPCONFIG.WSURLS.getCategories).then(function(response){return!!AppService.checkNetworkException(response)&&response.data},function(response){AppService.checkNetworkException(response)})},AppServiceOp.getCategoryById=function(data){return $http.post(APPCONFIG.WSURLS.getCategoryById,data).then(function(response){return!!AppService.checkNetworkException(response)&&response.data},function(response){AppService.checkNetworkException(response)})},AppServiceOp}]),app.controller("AppController",["$rootScope","$scope",function($rootScope,$scope){$scope.model={appName:APPCONFIG.appName,year:(new Date).getFullYear()},$rootScope.vm={pageLoader:!1},$scope.model.menuItems=[{name:"app.dashboard",label:"Dashboard",icon:"fa fa-dashboard",submenu:[]},{name:"app.category",label:"Add Category",icon:"fa fa-plus",submenu:[]},{name:"app.listCategories",label:"List Categories",icon:"fa fa-list",submenu:[]},{name:"app.article",label:"Add Article",icon:"fa fa-plus",submenu:[]},{name:"app.listArticles",label:"List Articles",icon:"fa fa-list",submenu:[]}]}]),app.controller("ArticleController",["$rootScope","$scope","$state","$stateParams","growl","ArticleService","CategoryService",function($rootScope,$scope,$state,$stateParams,growl,ArticleService,CategoryService){function init(){$scope.model.sectionLoader=!1,$stateParams.articleId>0?($scope.model.sectionLoader=!1,$scope.model.editMode=!0,$scope.model.formData.articleId=$stateParams.articleId,ArticleService.getArticleById({articleId:$scope.model.formData.articleId}).then(function(response){$scope.model.sectionLoader=!1,response.data.status===!0?($scope.model.categories=response.data.categories,$scope.model.formData=response.data.articleData):growl.error("Error while retriving the category",{ttl:5e3})})):($scope.model.editMode=!1,$scope.model.sectionLoader=!0,CategoryService.getCategories().then(function(response){$scope.model.sectionLoader=!1,response.data.status===!0?$scope.model.categories=response.data.categories:growl.error("Error while loading the categories",{ttl:5e3})}))}$scope.model={editMode:!1,sectionLoader:!0,categories:null,formData:{articleId:null,topic:"",category:"",breadCrumbs:"",keywords:"",description:"",demoLink:"",downloadFile:"",content:""}},$scope.model.options={language:"en",allowedContent:!0,entities:!1},$scope.onEditorReady=function(){$scope.model.sectionLoader=!1},$scope.save=function(){if(""==$scope.model.formData.topic)return growl.error("Enter topic",{ttl:5e3}),!1;if(""==$scope.model.formData.category)return growl.error("Select category",{ttl:5e3}),!1;if(""==$scope.model.formData.breadCrumbs)return growl.error("Enter breadcrumbs",{ttl:5e3}),!1;if(""==$scope.model.formData.keywords)return growl.error("Enter keywords",{ttl:5e3}),!1;if(""==$scope.model.formData.description)return growl.error("Enter description",{ttl:5e3}),!1;if(""==$scope.model.formData.content)return growl.error("Enter content",{ttl:5e3}),!1;$scope.model.sectionLoader=!0;var postData={articleId:$scope.model.formData.articleId,topic:$scope.model.formData.topic,category:$scope.model.formData.category,breadCrumbs:$scope.model.formData.breadCrumbs,keywords:$scope.model.formData.keywords,description:$scope.model.formData.description,demoLink:$scope.model.formData.demoLink,downloadFile:$scope.model.formData.downloadFile,content:$scope.model.formData.content,postedBy:$rootScope.vm.user.user_id};ArticleService.saveArticle(postData).then(function(response){$scope.model.sectionLoader=!1,response.data.status===!0?(growl.success(response.data.msg,{ttl:5e3}),$state.go("app.listArticles")):growl.error("Error while saving the article",{ttl:5e3})})},init()}]),app.controller("ArticleListController",["$scope","$state","$stateParams","ArticleService","growl",function($scope,$state,$stateParams,ArticleService,growl){function init(){$scope.model.sectionLoader=!0,ArticleService.getArticles($scope.model.filters).then(function(response){$scope.model.sectionLoader=!1,response.data.status===!0?$scope.model.articles=response.data.articles:growl.error("Error while loading the articles",{ttl:5e3})})}$scope.model={articles:null,filters:{pageFrom:0,pageTo:10}},$scope.performAction=function(articleId,status){$scope.model.sectionLoader=!0,ArticleService.updateArticleStatus({articleId:articleId,status:status}).then(function(response){$scope.model.sectionLoader=!1,response.data.status===!0?(growl.success(response.data.msg,{ttl:5e3}),$state.transitionTo($state.current,$stateParams,{reload:!0,inherit:!1,notify:!0})):growl.error("Error while loading the articles",{ttl:5e3})})},init()}]),app.controller("CategoryController",["$scope","$state","$stateParams","growl","CategoryService",function($scope,$state,$stateParams,growl,CategoryService){function init(){$scope.model.sectionLoader=!1,$stateParams.categoryId>0&&($scope.model.sectionLoader=!1,$scope.model.editMode=!0,$scope.model.categoryId=$stateParams.categoryId,CategoryService.getCategoryById({categoryId:$scope.model.categoryId}).then(function(response){$scope.model.sectionLoader=!1,response.data.status===!0?$scope.model.formData=response.data.categoryData:growl.error("Error while retriving the category",{ttl:5e3})}))}$scope.model={editMode:!1,sectionLoader:!0,formData:{categoryId:null,categoryName:"",title:"",keyword:"",description:""}},$scope.save=function(){return""==$scope.model.formData.categoryName?(growl.error("Enter category name",{ttl:5e3}),!1):""==$scope.model.formData.title?(growl.error("Enter title",{ttl:5e3}),!1):""==$scope.model.formData.keyword?(growl.error("Enter keyword",{ttl:5e3}),!1):""==$scope.model.formData.description?(growl.error("Enter description",{ttl:5e3}),!1):($scope.model.sectionLoader=!0,void CategoryService.saveCategory($scope.model.formData).then(function(response){$scope.model.sectionLoader=!1,response.data.status===!0?(growl.success(response.data.msg,{ttl:5e3}),$state.forceReload()):growl.error("Error while saving the category",{ttl:5e3})}))},init()}]),app.controller("CategoryListController",["$scope","CategoryService",function($scope,CategoryService){function init(){$scope.model.sectionLoader=!0,CategoryService.getCategories().then(function(response){$scope.model.sectionLoader=!1,response.data.status===!0?$scope.model.categories=response.data.categories:growl.error("Error while loading the categories",{ttl:5e3})})}$scope.model={categories:null},init()}]),app.controller("DashboardController",["$scope",function($scope){console.log("Dashboard")}]),app.controller("LoginController",["$scope","$timeout","$state","growl","LoginService",function($scope,$timeout,$state,growl,LoginService){function init(){LoginService.sessionCheck().then(function(response){response.data.status===!0&&$state.go("app.dashboard")})}$scope.model={formData:{username:"",password:""}},$timeout(function(){$scope.model.showLoginScreen=!0},500),$scope.loginSubmission=function(){return""==$scope.model.formData.username||""==$scope.model.formData.password?(growl.error("Username/Password shouldn't be blank",{ttl:5e3}),!1):void LoginService.login($scope.model.formData).then(function(response){response.data.status===!0?(growl.success("Authentication success",{ttl:5e3}),$state.go("app.dashboard")):growl.error("Invalid authentiation",{ttl:5e3})})},init()}]);